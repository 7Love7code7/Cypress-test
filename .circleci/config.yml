version: 2.1
orbs:
  cypress: cypress-io/cypress@dev:d02d6ac8b7b51efb2fda67c861f4094a05290947
  codecov: codecov/codecov@1.2.3 #
  win: circleci/windows@4.1.1

# executors:
#   with-chrome-and-firefox:
#     docker:
#       - image: "cypress/browsers:node16.14.2-slim-chrome100-ff99-edge"
#     resource_class: large
#     environment:
#       PERCY_TOKEN:
#       CYPRESS_coverage: false

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Commands ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
# commands:
#   report-coverage:
#     description: |
#       Store coverage report as an artifact and send it to Codecov service.
#     steps:
#       - store_artifacts:
#           path: coverage
#       - run: npx nyc report --reporter=text || true
#       - codecov/upload:
#           file: coverage/coverage-final.json

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Workflows ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
workflows:
  install-cypress: 
    jobs:
      # Setup
      #  1. Install Cypress
      #  2. Validate types
      #  3. Run server unit-tests
      - cypress/run:
          name: "Setup Linux1"
          # yarn: true
          # executor: with-chrome-and-firefox
          # build: "yarn build:ci"
          # post-steps:
          #   - run:
          #       name: Print machine info ℹ️
          #       command: yarn cypress info
          #   - run:
          #       name: Check Types
          #       command: yarn types
          #   - run:
          #       name: Lint Files
          #       command: yarn lint
          #   - run:
          #       name: Run Unit Tests
          #       command: yarn test:unit:ci
          package-manager: yarn
          cache-key: 'v1-cypress-cache-{{ arch }}-{{ checksum "package.json" }}'
      - cypress/run:
          name: "Setup Linux2"
          # yarn: true
          # executor: with-chrome-and-firefox
          # build: "yarn build:ci"
          # post-steps:
          #   - run:
          #       name: Print machine info ℹ️
          #       command: yarn cypress info
          #   - run:
          #       name: Check Types
          #       command: yarn types
          #   - run:
          #       name: Lint Files
          #       command: yarn lint
          #   - run:
          #       name: Run Unit Tests
          #       command: yarn test:unit:ci
          package-manager: yarn
      - cypress/run:
          name: "Setup Linux3"
          # yarn: true
          # executor: with-chrome-and-firefox
          # build: "yarn build:ci"
          # post-steps:
          #   - run:
          #       name: Print machine info ℹ️
          #       command: yarn cypress info
          #   - run:
          #       name: Check Types
          #       command: yarn types
          #   - run:
          #       name: Lint Files
          #       command: yarn lint
          #   - run:
          #       name: Run Unit Tests
          #       command: yarn test:unit:ci
          package-manager: yarn
    
#     # Run Cypress Component tests
#     - cypress/run:
#         name: "Cypress Component Tests"
#         executor: with-chrome-and-firefox
#         yarn: true
#         component: true
#         record: true
#         parallel: true
#         parallelism: 5
#         ci-build-id: ${CIRCLE_SHA1:0:8}
#         group: Component
#         requires:
#           - Setup Linux
#         post-steps:
#           - report-coverage

#     # Run API tests against backend server
#     - cypress/run:
#         name: "API Tests"
#         browser: chrome
#         spec: cypress/tests/api/*
#         executor: with-chrome-and-firefox
#         wait-on: "http://localhost:3000"
#         yarn: true
#         start: yarn start:ci
#         record: true
#         parallel: true
#         parallelism: 5
#         ci-build-id: ${CIRCLE_SHA1:0:8}
#         group: API
#         requires:
#           - Setup Linux
#         post-steps:
#           - report-coverage

#     # Run E2E tests in Chrome
#     - cypress/run:
#         name: "UI Tests - Chrome"
#         browser: chrome
#         spec: cypress/tests/ui/*
#         executor: with-chrome-and-firefox
#         wait-on: "http://localhost:3000"
#         command-prefix: npx percy exec --
#         yarn: true
#         start: yarn start:ci
#         record: true
#         parallel: true
#         parallelism: 5
#         ci-build-id: ${CIRCLE_SHA1:0:8}
#         group: "UI - Chrome"
#         requires:
#           - Setup Linux
#         post-steps:
#           - report-coverage

#     # Run E2E tests in Chrome with mobile device viewport
#     - cypress/run:
#         name: "UI Tests - Chrome - Mobile"
#         browser: chrome
#         spec: cypress/tests/ui/*
#         config: "viewportWidth=375,viewportHeight=667"
#         executor: with-chrome-and-firefox
#         wait-on: "http://localhost:3000"
#         yarn: true
#         start: yarn start:ci
#         record: true
#         parallel: true
#         parallelism: 5
#         ci-build-id: ${CIRCLE_SHA1:0:8}
#         group: "UI - Chrome - Mobile"
#         requires:
#           - Setup Linux
#         post-steps:
#           - report-coverage

#     # Run E2E tests in Firefox
#     - cypress/run:
#         name: "UI Tests - Firefox"
#         browser: firefox
#         spec: cypress/tests/ui/*
#         executor: with-chrome-and-firefox
#         wait-on: "http://localhost:3000"
#         yarn: true
#         start: yarn start:ci
#         record: true
#         parallel: true
#         parallelism: 5
#         ci-build-id: ${CIRCLE_SHA1:0:8}
#         group: "UI - Firefox"
#         requires:
#           - Setup Linux
#         post-steps:
#           - report-coverage

#     # Run E2E tests in Firefox with mobile device viewport
#     - cypress/run:
#         name: "UI Tests - Firefox - Mobile"
#         browser: firefox
#         spec: cypress/tests/ui/*
#         config: viewportWidth=375,viewportHeight=667
#         executor: with-chrome-and-firefox
#         wait-on: "http://localhost:3000"
#         yarn: true
#         start: yarn start:ci
#         record: true
#         parallel: true
#         parallelism: 5
#         ci-build-id: ${CIRCLE_SHA1:0:8}
#         group: "UI - Firefox - Mobile"
#         requires:
#           - Setup Linux
#         post-steps:
#           - report-coverage

# windows-workflow: &windows-workflow
#   jobs:
#     # Setup
#     #  1. Install Cypress
#     #  2. Validate types
#     #  3. Run server unit-tests
#     - cypress/install:
#         name: "Setup Windows"
#         yarn: true
#         executor:
#           # executor comes from the "windows" orb
#           name: win/default
#           shell: bash.exe
#           size: large
#         pre-steps:
#           - run:
#               name: Disabling Windows Defender
#               shell: powershell.exe
#               command: Set-MpPreference -DisableRealtimeMonitoring $true
#         build: yarn build:ci
#         post-steps:
#           - run:
#               name: Cypress info
#               command: yarn cypress info
#           - run:
#               name: Cypress cache list
#               command: yarn cypress cache list
#           - run:
#               name: Check Types
#               command: yarn types
#           - run:
#               name: Lint Files
#               command: yarn lint
#           - run:
#               name: Run Unit Tests
#               command: yarn test:unit:ci

#     # Run E2E tests in Windows in Electron
#     - cypress/run:
#         name: "UI Tests - Electron - Windows"
#         spec: cypress/tests/ui/*
#         executor:
#           # executor comes from the "windows" orb
#           name: win/default
#           shell: bash.exe
#         wait-on: "http://localhost:3000"
#         yarn: true
#         start: yarn start:ci
#         record: true
#         parallel: true
#         parallelism: 5
#         ci-build-id: ${CIRCLE_SHA1:0:8}
#         group: "UI - Electron - Windows"
#         requires:
#           - Setup Windows
#         post-steps:
#           - report-coverage
#         no-workspace: true
#         timeout: 30m

# workflows:
#   linux:
#     <<: *linux-workflow
#   windows:
#     <<: *windows-workflow
